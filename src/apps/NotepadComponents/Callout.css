.notepad {
    position: relative;
    background-color: var(
        --bg-color-dark,
        #191919
    ); /* Default fallback if variable is not defined */
    padding: 10px;
    min-height: calc(100% - 20px);
    display: flex;
    flex-direction: column;

    /* Define color-related variables scoped to .notepad and its children */
    --bg-color-dark: #191919;
    --bg-color-dark-hover: #252525;
    --text-color-light: #f5f5f5;
    --text-color-dark: #fff;
    --border-color: #353535;
    --accent-color: #313131;
    --shadow-color: rgba(0, 0, 0, 0.08);
}

.callout {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 10px;
    border-radius: 10px;
    background-color: var(--bg-color-dark-hover); /* Using color variable */
    border: 1px solid var(--border-color); /* Using color variable */
    margin-top: 5px;
    margin-bottom: 5px;
}

.callout-emoji {
    font-size: 25px;
    padding: 5px;
    border-radius: 5px;
    transition: 200ms;
    min-width: 1.5rem;
    width: 1.5rem;
    height: 1.5rem;
}

.callout-emoji img {
    width: 100%;
    height: 100%;
}

.callout-emoji:hover {
    background-color: #9595956d;
    cursor: pointer;
}

.callout-picker {
    position: absolute;
    top: 2.5rem;
    z-index: 10;
}

.callout-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9;
}

.callout-content {
    display: flex;
    flex-direction: column;
    overflow: auto;
}

/* Example: Override emoji-picker-react styles for dark mode */
.EmojiPickerReact {
    background-color: var(
        --bg-color-dark-hover
    ) !important; /* Using color variable */
    color: var(--text-color-light) !important; /* Using color variable */
    border: 1px solid var(--border-color) !important; /* Using color variable */
    box-shadow: 0 0 100px var(--shadow-color) !important;
}

.EmojiPickerReact .epr-search-container input {
    background-color: var(
        --bg-color-dark-hover
    ) !important; /* Using color variable */
    border: 2px solid var(--border-color) !important; /* Using color variable */
    color: #ccc !important;
}

.EmojiPickerReact .epr-emoji-category-label {
    background-color: var(
        --bg-color-dark-hover
    ) !important; /* Using color variable */
    color: #ccc !important;
}

.EmojiPickerReact .epr-category-nav button {
    filter: brightness(0.8);
}

.EmojiPickerReact .epr-category-nav button.epr-active {
    filter: brightness(1.2);
}

.EmojiPickerReact .epr-btn:has(.epr-emoji-img):hover,
.EmojiPickerReact .epr-btn:has(.epr-emoji-img):focus {
    background-color: #9595952d !important;
}

.EmojiPickerReact .epr-skin-tones {
    background-color: var(
        --bg-color-dark-hover
    ) !important; /* Using color variable */
}
